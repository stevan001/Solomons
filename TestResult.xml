<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="c:\Projects\solomons\Source\ProdigyProducts.Test\bin\Debug\ProdigyProducts.Test.dll" total="11" errors="4" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2012-09-15" time="23:08:25">
  <environment nunit-version="2.6.1.12217" clr-version="2.0.50727.4971" os-version="Microsoft Windows NT 6.1.7600.0" platform="Win32NT" cwd="c:\Projects\solomons" machine-name="STEVAN-PC" user="Stevan" user-domain="Stevan-PC" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Assembly" name="c:\Projects\solomons\Source\ProdigyProducts.Test\bin\Debug\ProdigyProducts.Test.dll" executed="True" result="Failure" success="False" time="2.093" asserts="0">
    <results>
      <test-suite type="Namespace" name="ProdigyProducts" executed="True" result="Failure" success="False" time="2.086" asserts="0">
        <results>
          <test-suite type="Namespace" name="Test" executed="True" result="Failure" success="False" time="2.086" asserts="0">
            <results>
              <test-suite type="Namespace" name="PresenterTests" executed="True" result="Failure" success="False" time="0.426" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="CompleteRegPresenterTest" executed="True" result="Failure" success="False" time="0.341" asserts="0">
                    <results>
                      <test-case name="ProdigyProducts.Test.PresenterTests.CompleteRegPresenterTest.ShouldCompleteRegistration" executed="True" result="Error" success="False" time="0.305" asserts="0">
                        <failure>
                          <message><![CDATA[System.ArgumentException : Property ICompleteRegView.RegistrationCode is read-only.
Parameter name: expression]]></message>
                          <stack-trace><![CDATA[at Moq.Mock.ThrowIfPropertyNotWritable(PropertyInfo prop)
at Moq.Mock.SetupSet[T,TProperty](Mock mock, Expression`1 expression)
at Moq.Mock`1.SetupProperty[TProperty](Expression`1 property, TProperty initialValue)
at ProdigyProducts.Test.PresenterTests.CompleteRegPresenterTest.ShouldCompleteRegistration() in C:\Projects\solomons\Source\ProdigyProducts.Test\PresenterTests\CompleteRegPresenterTest.cs:line 28
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="ProdigyProducts.Test.PresenterTests.CompleteRegPresenterTest.ShouldDisplayCompletionResult" executed="True" result="Error" success="False" time="0.002" asserts="0">
                        <failure>
                          <message><![CDATA[System.ArgumentException : Property ICompleteRegView.RegistrationCode is read-only.
Parameter name: expression]]></message>
                          <stack-trace><![CDATA[at Moq.Mock.ThrowIfPropertyNotWritable(PropertyInfo prop)
at Moq.Mock.SetupSet[T,TProperty](Mock mock, Expression`1 expression)
at Moq.Mock`1.SetupProperty[TProperty](Expression`1 property, TProperty initialValue)
at ProdigyProducts.Test.PresenterTests.CompleteRegPresenterTest.ShouldDisplayCompletionResult() in C:\Projects\solomons\Source\ProdigyProducts.Test\PresenterTests\CompleteRegPresenterTest.cs:line 46
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="ProdigyProducts.Test.PresenterTests.CompleteRegPresenterTest.ShouldDisplayProceedToLogin" executed="True" result="Error" success="False" time="0.015" asserts="0">
                        <failure>
                          <message><![CDATA[System.ArgumentException : Property ICompleteRegView.RegistrationCode is read-only.
Parameter name: expression]]></message>
                          <stack-trace><![CDATA[at Moq.Mock.ThrowIfPropertyNotWritable(PropertyInfo prop)
at Moq.Mock.SetupSet[T,TProperty](Mock mock, Expression`1 expression)
at Moq.Mock`1.SetupProperty[TProperty](Expression`1 property, TProperty initialValue)
at ProdigyProducts.Test.PresenterTests.CompleteRegPresenterTest.ShouldDisplayProceedToLogin() in C:\Projects\solomons\Source\ProdigyProducts.Test\PresenterTests\CompleteRegPresenterTest.cs:line 36
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="ProdigyProducts.Test.PresenterTests.CompleteRegPresenterTest.ShouldNotProceedToShowLogin" executed="True" result="Error" success="False" time="0.002" asserts="0">
                        <failure>
                          <message><![CDATA[System.ArgumentException : Property ICompleteRegView.RegistrationCode is read-only.
Parameter name: expression]]></message>
                          <stack-trace><![CDATA[at Moq.Mock.ThrowIfPropertyNotWritable(PropertyInfo prop)
at Moq.Mock.SetupSet[T,TProperty](Mock mock, Expression`1 expression)
at Moq.Mock`1.SetupProperty[TProperty](Expression`1 property, TProperty initialValue)
at ProdigyProducts.Test.PresenterTests.CompleteRegPresenterTest.ShouldNotProceedToShowLogin() in C:\Projects\solomons\Source\ProdigyProducts.Test\PresenterTests\CompleteRegPresenterTest.cs:line 54
]]></stack-trace>
                        </failure>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="RegUserPresenterTest" executed="True" result="Success" success="True" time="0.081" asserts="0">
                    <results>
                      <test-case name="ProdigyProducts.Test.PresenterTests.RegUserPresenterTest.ShouldCreateANewUser" executed="True" result="Success" success="True" time="0.063" asserts="0" />
                      <test-case name="ProdigyProducts.Test.PresenterTests.RegUserPresenterTest.ShouldDisplayErrorMessage" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                      <test-case name="ProdigyProducts.Test.PresenterTests.RegUserPresenterTest.ShouldDisplayRegistrationMessage" executed="True" result="Success" success="True" time="0.008" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="RegistrationTasksTest" executed="True" result="Success" success="True" time="1.655" asserts="0">
                <results>
                  <test-case name="ProdigyProducts.Test.RegistrationTasksTest.Should_create_personlized_email" executed="True" result="Success" success="True" time="1.026" asserts="2" />
                  <test-case name="ProdigyProducts.Test.RegistrationTasksTest.ShouldCreateAccount" executed="True" result="Success" success="True" time="0.609" asserts="0" />
                  <test-case name="ProdigyProducts.Test.RegistrationTasksTest.ShouldNotAttemptToRegisterAnAccountTwice" executed="True" result="Success" success="True" time="0.009" asserts="0" />
                  <test-case name="ProdigyProducts.Test.RegistrationTasksTest.ShouldRegisterAccount" executed="True" result="Success" success="True" time="0.006" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>